// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Itmo calendar sync service",
    "title": "Itmo Calendar",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/health": {
      "get": {
        "security": [],
        "description": "Verifies the API is operational and returns its status.",
        "tags": [
          "System"
        ],
        "summary": "Health check endpoint.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Service is healthy."
          },
          "503": {
            "description": "Service is unhealthy.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscribe": {
      "post": {
        "description": "Subscribes user by ISU and password, generates and stores iCal file.",
        "tags": [
          "CalDav"
        ],
        "summary": "Subscribe and generate iCal for user.",
        "operationId": "subscribeSchedule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscribeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription successful.",
            "schema": {
              "$ref": "#/definitions/SubscribeResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{isu}/ical": {
      "get": {
        "description": "Returns the iCalendar (.ics) file for the user with the given ISU.",
        "produces": [
          "text/calendar"
        ],
        "tags": [
          "CalDav"
        ],
        "summary": "Get user's iCal file by ISU.",
        "operationId": "getICal",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ISU of the user.",
            "name": "isu",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "iCal file.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Service Unavailable"
        },
        "message": {
          "type": "string",
          "example": "The service is currently unavailable. Please try again later."
        }
      }
    },
    "SubscribeRequest": {
      "type": "object",
      "required": [
        "isu",
        "password"
      ],
      "properties": {
        "isu": {
          "type": "integer",
          "format": "int64",
          "example": 123456789
        },
        "password": {
          "type": "string",
          "example": "user_password"
        }
      }
    },
    "SubscribeResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Subscription successful. iCal generated."
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "description": "JWT token for user authentication",
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Itmo calendar sync service",
    "title": "Itmo Calendar",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/health": {
      "get": {
        "security": [],
        "description": "Verifies the API is operational and returns its status.",
        "tags": [
          "System"
        ],
        "summary": "Health check endpoint.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Service is healthy."
          },
          "503": {
            "description": "Service is unhealthy.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscribe": {
      "post": {
        "description": "Subscribes user by ISU and password, generates and stores iCal file.",
        "tags": [
          "CalDav"
        ],
        "summary": "Subscribe and generate iCal for user.",
        "operationId": "subscribeSchedule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscribeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription successful.",
            "schema": {
              "$ref": "#/definitions/SubscribeResponse"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{isu}/ical": {
      "get": {
        "description": "Returns the iCalendar (.ics) file for the user with the given ISU.",
        "produces": [
          "text/calendar"
        ],
        "tags": [
          "CalDav"
        ],
        "summary": "Get user's iCal file by ISU.",
        "operationId": "getICal",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ISU of the user.",
            "name": "isu",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "iCal file.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Service Unavailable"
        },
        "message": {
          "type": "string",
          "example": "The service is currently unavailable. Please try again later."
        }
      }
    },
    "SubscribeRequest": {
      "type": "object",
      "required": [
        "isu",
        "password"
      ],
      "properties": {
        "isu": {
          "type": "integer",
          "format": "int64",
          "example": 123456789
        },
        "password": {
          "type": "string",
          "example": "user_password"
        }
      }
    },
    "SubscribeResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Subscription successful. iCal generated."
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "description": "JWT token for user authentication",
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    }
  }
}`))
}
